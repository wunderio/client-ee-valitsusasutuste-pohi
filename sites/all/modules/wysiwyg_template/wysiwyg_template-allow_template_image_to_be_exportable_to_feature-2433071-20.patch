diff --git a/wysiwyg_template.admin.inc b/wysiwyg_template.admin.inc
index 2bfd8fa..265dece 100644
--- a/wysiwyg_template.admin.inc
+++ b/wysiwyg_template.admin.inc
@@ -177,16 +177,10 @@ function wysiwyg_template_template_form($form, $form_state, $template = NULL) {
     '#description' => t('If you select no content type, this template will be available for all content types.'),
     '#access' => (count($content_types) > 1),
   );
-  // load image if it has one
+  // Load image if it has one.
   $image = '';
-  if (isset($form_state['values']['fid']) && $form_state['values']['fid']) {
-    $image_uri = file_load($form_state['values']['fid'])->uri;
-    if ($image_uri) {
-      $image = theme('image_style', array(
-        'style_name' => 'wysiwyg_template_thumbnail',
-        'path' => $image_uri
-      ));
-    }
+  if (!empty($form_state['values']['template_image'])) {
+    $image = '<img src="' . $form_state['values']['template_image'] . '">';
   }
   $form['template_image'] = array(
     '#type' => 'file',
@@ -195,12 +189,8 @@ function wysiwyg_template_template_form($form, $form_state, $template = NULL) {
     '#description' => t('A image to be shown with the template.'),
     '#prefix' => $image,
   );
-  $form['template_image_fid'] = array(
-    '#type' => 'hidden',
-    '#default_value' => isset($form_state['values']['fid']) ? $form_state['values']['fid'] : 0,
-  );
-  // add delete button if it has an image
-  if (isset($form_state['values']['fid']) && $form_state['values']['fid']) {
+  // Add delete button if it has an image.
+  if (!empty($form_state['values']['template_image'])) {
     $form['template_image_delete'] = array(
       '#type' => 'checkbox',
       '#title' => t('Delete the Template image.')
@@ -256,45 +246,35 @@ function wysiwyg_template_template_form_submit($form, &$form_state) {
   // delete confirmation provided
   if (isset($form_state['values']['delete'])) {
     if ($form_state['values']['delete'] === TRUE) {
-      // delete image if one was uploaded
-      if (!empty($form_state['values']['template_image_fid'])) {
-        file_delete($form_state['values']['template_image_fid']);
-      }
       wysiwyg_template_delete_template($form_state['values']['name']);
       drupal_set_message(t('The template has been deleted.'));
       $form_state['redirect'] = 'admin/config/content/wysiwyg-templates';
       return;
     }
   }
-  // drop image if selected and checked
+  // Drop image if selected and checked.
   if (isset($form_state['values']['template_image_delete']) && $form_state['values']['template_image_delete']) {
-    file_delete(file_load($form_state['values']['template_image_fid']));
-    // unset the fid previously used
-    $form_state['values']['template_image_fid'] = 0;
+    _wysiwyg_template_delete_image($form_state['values']['name']);
   }
-  // prepare file if needed
-  $filepath = 'public://wysiwyg_template_images/';
-  file_prepare_directory($filepath, FILE_CREATE_DIRECTORY);
-  // save the image, validate it against file_validate_extensions
-  $file = file_save_upload('template_image', array('file_validate_extensions' => array('jpg png gif jpeg')), $filepath);
+
+  $template = $form_state['values'];
+
+  // Save the image temporarily to get the base64 encoding, validate it against
+  // file_validate_extensions.
+  $file = file_save_upload('template_image', array('file_validate_extensions' => array('jpg png gif jpeg')));
+  $template['template_image'] = _wysiwyg_template_load_image($form_state['values']['name']);
+  $template['template_image'] = $template['template_image']['data'];
   if ($file) {
-    // set status to permanent
-    $file->status = FILE_STATUS_PERMANENT;
-    $file = file_save($file);
-    if ($file) {
-      $form_state['values']['fid'] = $file->fid;
-      // delete previous file if it had one
-      if ($form_state['values']['template_image_fid']) {
-        file_delete(file_load($form_state['values']['template_image_fid']));
-      }
-    }
-  }
-  else {
-    $form_state['values']['fid'] = $form_state['values']['template_image_fid'];
+    $type = pathinfo($file->uri, PATHINFO_EXTENSION);
+    // Re-generate the template image with image style so it would be small
+    // enough to put in database.
+    image_style_create_derivative(image_style_load('wysiwyg_template_thumbnail'), $file->uri, $file->uri);
+    $template['template_image'] = _wysiwyg_template_generate_base64_image(file_get_contents($file->uri), $type);
+    file_delete($file);
   }
-  // save the template
+
+  // Save the template.
   // Flatten body field data.
-  $template = $form_state['values'];
   $template['body'] = $form_state['values']['body']['value'];
   $template['format'] = $form_state['values']['body']['format'];
   if (wysiwyg_template_save_template($template)) {
diff --git a/wysiwyg_template.install b/wysiwyg_template.install
index d673b43..605e619 100644
--- a/wysiwyg_template.install
+++ b/wysiwyg_template.install
@@ -24,13 +24,6 @@ function wysiwyg_template_schema() {
         'length' => 255,
         'not null' => TRUE
       ),
-      'fid' => array(
-        'description' => 'The {file_managed}.fid of the image.',
-        'type' => 'int',
-        'unsigned' => TRUE,
-        'not null' => TRUE,
-        'default' => 0
-      ),
       'body' => array(
         'description' => 'The Wysiwyg template HTML',
         'type' => 'text'
@@ -46,6 +39,10 @@ function wysiwyg_template_schema() {
         'default' => 0,
         'description' => 'The weight of this template in listings and the user interface.',
       ),
+      'template_image' => array(
+        'description' => 'Base64 encoded template images.',
+        'type' => 'text',
+      ),
     ),
     'primary key' => array('name'),
     'indexes' => array(
@@ -210,3 +207,51 @@ function wysiwyg_template_update_7205() {
   $schema = wysiwyg_template_schema();
   db_add_field('wysiwyg_templates', 'format', $schema['wysiwyg_templates']['fields']['format']);
 }
+
+/**
+ * Add template_image field, migrate old template images and remove fid column.
+ */
+function wysiwyg_template_update_7206() {
+  if (!db_field_exists('wysiwyg_templates', 'template_image')) {
+    $schema = wysiwyg_template_schema();
+    db_add_field('wysiwyg_templates', 'template_image', $schema['wysiwyg_templates']['fields']['template_image']);
+  }
+
+  // Migrate the old template files.
+  {
+    $results = db_query('SELECT name, fid FROM {wysiwyg_templates}');
+    foreach ($results as $result_template) {
+      $file_object = file_load($result_template->fid);
+
+      // Re-generate the template image with image style so it would be small
+      // enough to put in database.
+      image_style_create_derivative(image_style_load('wysiwyg_template_thumbnail'), $file_object->uri, $file_object->uri);
+
+      $filepath = drupal_realpath($file_object->uri);
+      $type = pathinfo($file_object->uri, PATHINFO_EXTENSION);
+      $file_contents = file_get_contents($filepath);
+      $template_image = _wysiwyg_template_generate_base64_image($file_contents, $type);
+
+      // Add the new base64 image to database.
+      db_update('wysiwyg_templates')
+        ->fields(array('template_image' => $template_image))
+        ->condition('name', $result_template->name)
+        ->execute();
+
+      // Delete the old file.
+      file_delete($file_object);
+    }
+
+    // Delete the old image styles folder.
+    $wysiwyg_template = image_style_load('wysiwyg_template_thumbnail');
+    image_style_flush($wysiwyg_template);
+
+    // Remove the old wysiwyg_template_thumbnail folder.
+    file_unmanaged_delete_recursive('public://wysiwyg_template_images/');
+  }
+
+  // Remove fid column.
+  db_drop_field('wysiwyg_templates', 'fid');
+  // Re-populate the menu_router table because we added new path.
+  menu_rebuild();
+}
diff --git a/wysiwyg_template.module b/wysiwyg_template.module
index ba8be0e..b6fabb3 100644
--- a/wysiwyg_template.module
+++ b/wysiwyg_template.module
@@ -6,7 +6,7 @@
  * Wysiwyg API.
  */
 
- /**
+/**
  * Implementation of hook_menu().
  */
 function wysiwyg_template_menu() {
@@ -84,10 +84,32 @@ function wysiwyg_template_menu() {
     'access arguments' => array('access content'),
     'type' => MENU_CALLBACK,
   );
+  // Individual template image - referenced by javascript above.
+  $items['wysiwyg-templates/template_image/%'] = array(
+    'page callback' => 'wysiwyg_template_image_print',
+    'page arguments' => array(2),
+    'access callback' => 'wysiwyg_template_image_access_callback',
+    'type' => MENU_CALLBACK,
+  );
   return $items;
 }
 
 /**
+ * Access callback for the template image menu path.
+ *
+ * First check if the user is logged and then check if the user session and the
+ * private key match by comparing the token in the url.
+ */
+function wysiwyg_template_image_access_callback() {
+  if (user_is_logged_in() && !empty($_GET['token']) && drupal_valid_token($_GET['token'])) {
+    return TRUE;
+  }
+  else {
+    return FALSE;
+  }
+}
+
+/**
  * Implements hook_permission().
  */
 function wysiwyg_template_permission() {
@@ -304,6 +326,18 @@ function wysiwyg_template_html_print($body, $editorName) {
   }
 }
 
+
+/**
+ * Menu callback to display the template image.
+ */
+function wysiwyg_template_image_print($templateName) {
+  $image = _wysiwyg_template_load_image($templateName, TRUE);
+  if (!empty($image['type'])) {
+    drupal_add_http_header('Content-Type', $image['type']);
+  }
+  print $image['data'];
+}
+
 /**
  * Load a specific template for viewing, as called through the menu wildcard
  */
@@ -324,11 +358,11 @@ function wysiwyg_template_load_template($name) {
       'title' => $template->title,
       'description' => $template->description,
       'weight' => $template->weight,
-      'fid' => $template->fid,
       'body' => $template->body,
       'format' => $template->format,
       'name' => $name,
       'content_types' => wysiwyg_template_load_template_content_types($name),
+      'template_image' => $template->template_image,
     );
   }
 
@@ -381,13 +415,12 @@ function wysiwyg_template_load_all($contentType = '_', $forSelect = FALSE, $incl
       }
     }
 
-    //get the image
-    $image = file_load($dbTemplate->fid);
-    if ($image) {
-      $image_uri = str_replace($base_url, "", image_style_url('wysiwyg_template_thumbnail', $image->uri));
+    // Get the image.
+    if (!empty($dbTemplate->template_image)) {
+      $image_uri = url('wysiwyg-templates/template_image/' . $dbTemplate->name, array('query' => array('token' => drupal_get_token())));
     }
     else {
-      $image_uri = "";
+      $image_uri = '';
     }
     $template = array(
       'title' => $dbTemplate->title,
@@ -422,10 +455,10 @@ function wysiwyg_template_save_template($template) {
     'title' => $template['title'],
     'description' => $template['description'],
     'weight' => (isset($template['weight']) ? $template['weight'] : 0),
-    'fid' => $template['fid'],
     'body' => $template['body'],
     // Avoid PHP Notice when importing templates without format.
     'format' => isset($template['format']) ? $template['format'] : filter_fallback_format(),
+    'template_image' => $template['template_image'],
   );
 
   $existing = wysiwyg_template_name_exists($template['name']);
@@ -569,3 +602,66 @@ function _wysiwyg_template_set_node_type($type = NULL) {
 
   return isset($content_type) ? $content_type : '_';
 }
+
+/**
+ * Load image from a template.
+ *
+ * @param string $machine_name
+ *   Machine name of the template.
+ * @param bool $base64_decode
+ *   Output image as binary if false, base64 otherwise.
+ *
+ * @return array
+ *   Return array with 2 indexes: type and data. Type is appropriate for the
+ *   drupal_add_http_header() function e.g. 'image/png'. Data is either base64
+ *   or binary data depending on the $base64_decode parameter.
+ */
+function _wysiwyg_template_load_image($machine_name, $base64_decode = FALSE) {
+  $image = array(
+    'type' => '',
+    'data' => '',
+  );
+  $templateImageResults = db_query('SELECT template_image FROM {wysiwyg_templates} WHERE name = :name', array(':name' => $machine_name));
+  $templateImage = $templateImageResults->fetchObject();
+
+  // Add image type to output.
+  if (preg_match('/data:(image\/.*);/U', $templateImage->template_image, $matches)) {
+    $image['type'] = $matches[1];
+  }
+
+  if (!empty($templateImage->template_image)) {
+    // Decode from base64 to binary.
+    if ($base64_decode) {
+      $data = explode(',', $templateImage->template_image);
+      $image['data'] = base64_decode($data[1]);
+    }
+    // Output image as is (base64) from database.
+    else {
+      $image['data'] = $templateImage->template_image;
+    }
+  }
+
+  return $image;
+}
+
+/**
+ * Delete image from a template.
+ */
+function _wysiwyg_template_delete_image($name) {
+  db_query("UPDATE wysiwyg_templates SET template_image = NULL WHERE name = :name", array(':name' => $name));
+}
+
+/**
+ * Generate base64 image string.
+ *
+ * @param string $image_content
+ *   Binary image content.
+ * @param string $file_type
+ *   File type/extension.
+ *
+ * @return string
+ *   Base64 representation of image.
+ */
+function _wysiwyg_template_generate_base64_image($image_content, $file_type) {
+  return 'data:image/' . $file_type . ';base64,' . base64_encode($image_content);
+}
